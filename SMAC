<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sistema de Cadastro e Login</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500&display=swap" rel="stylesheet">
    <style>
        body {
            background: linear-gradient(to right, #1e1e1e, #303030);
            color: #E0E0E0;
            font-family: 'Roboto', sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            transition: background-color 0.3s, color 0.3s;
            overflow: hidden;
        }
        .container {
            width: 400px;
            padding: 60px;
            border: 1px solid #BB86FC;
            border-radius: 15px;
            box-shadow: 0 2px 15px rgba(0, 0, 0, 0.3);
            text-align: center;
            background-color: #2E2E2E;
            margin-bottom: 40px;
        }
        h2 {
            margin: 0 0 20px;
            color: #BB86FC;
        }
        input {
            width: 100%;
            padding: 10px;
            margin: 10px 0;
            border: 2px solid #BB86FC;
            border-radius: 5px;
            background-color: #FFFFFF;
            color: #333;
            transition: border-color 0.3s, box-shadow 0.3s;
        }
        input:focus {
            border-color: #6200EE;
            box-shadow: 0 0 5px rgba(98, 0, 238, 0.5);
            outline: none;
        }
        button {
            background: linear-gradient(to right, #BB86FC, #9B1F8F);
            color: white;
            border: none;
            padding: 10px;
            cursor: pointer;
            width: 106%;
            margin-top: 10px;
            border-radius: 5px;
            transition: background-color 0.3s, opacity 0.3s, transform 0.2s;
            font-weight: bold;
        }
        button:hover {
            opacity: 0.9;
            transform: scale(1.05);
        }
        .hidden {
            display: none;
        }
        #theme-toggle {
            position: fixed;
            bottom: 70px;
            right: 30px;
            width: 50px;
            height: 50px;
            border: none;
            border-radius: 50%;
            background: linear-gradient(to right, #BB86FC, #9B1F8F);
            color: white;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
            transition: background-color 0.3s;
        }
        #theme-toggle:hover {
            opacity: 0.8;
        }
    </style>
</head>
<body>

<div class="container" id="login-container">
    <h2>Login</h2>
    <input type="text" id="cpfMatricula" placeholder="CPF ou Matrícula" required>
    <input type="password" id="senha" placeholder="Senha" required>
    <button onclick="login()">Login</button>
    <button onclick="mostrarCadastro()">Cadastrar</button>
</div>

<div class="container hidden" id="cadastro-container">
    <h2>Cadastro</h2>
    <input type="text" id="cpf" placeholder="CPF" required>
    <input type="text" id="dataNascimento" placeholder="Data de Nascimento" required>
    <input type="text" id="matricula" placeholder="Matrícula" required>
    <input type="password" id="novaSenha" placeholder="Senha" required>
    <input type="password" id="confirmacaoSenha" placeholder="Confirmação da Senha" required>
    <button onclick="cadastrarUsuario()">Cadastrar</button>
    <button onclick="voltarLogin()">Voltar</button>
</div>

<div class="container hidden" id="funcionalidades-container">
    <h2>Funcionalidades</h2>
    <button onclick="mostrarGeradorPlanilha()">Gerador de Planilha</button>
    <button onclick="mostrarAnaliseCombustivel()">Análise de Combustível</button>

    <div id="gerador-planilha" class="hidden">
        <h3>Gerador de Planilha</h3>
        <input type="text" id="lote" placeholder="Lote">
        <input type="text" id="tipo" placeholder="Tipo">
        <input type="date" id="dataAnalise">
        <input type="text" id="resultado" placeholder="Resultado (Conforme/Não Conforme)">
        <button onclick="gerarPlanilha()">Gerar Planilha</button>
    </div>

    <div id="analise-combustivel" class="hidden">
        <h3>Análise de Combustível</h3>
        <input type="number" id="densidade" placeholder="Densidade" step="0.01">
        <input type="number" id="temperatura" placeholder="Temperatura">
        <button onclick="verificarConformidade()">Verificar Conformidade</button>
    </div>
</div>

<button id="theme-toggle" onclick="toggleTheme()">☀️</button>

<script>
    let db;
    const request = indexedDB.open('usuariosDB', 1);

    request.onupgradeneeded = function(event) {
        db = event.target.result;
        const objectStore = db.createObjectStore('usuarios', { keyPath: 'cpf' });
        objectStore.createIndex('senha', 'senha', { unique: false });
    };

    request.onsuccess = function(event) {
        db = event.target.result;
    };

    request.onerror = function(event) {
        console.error('Erro ao abrir o banco de dados:', event.target.error);
    };

    function cadastrarUsuario() {
        const cpf = document.getElementById('cpf').value;
        const dataNascimento = document.getElementById('dataNascimento').value;
        const matricula = document.getElementById('matricula').value;
        const novaSenha = document.getElementById('novaSenha').value;
        const confirmacaoSenha = document.getElementById('confirmacaoSenha').value;

        if (!cpf || !dataNascimento || !matricula || !novaSenha || !confirmacaoSenha) {
            alert("Preencha todos os campos!");
            return;
        }

        if (novaSenha !== confirmacaoSenha) {
            alert("As senhas não coincidem!");
            return;
        }

        const transaction = db.transaction(['usuarios'], 'readwrite');
        const objectStore = transaction.objectStore('usuarios');

        const usuario = { cpf, senha: novaSenha, dataNascimento, matricula };
        const request = objectStore.add(usuario);

        request.onsuccess = function() {
            alert("Usuário cadastrado com sucesso!");
            voltarLogin();
        };

        request.onerror = function(event) {
            alert("Erro ao cadastrar usuário: " + event.target.error);
        };
    }

    function login() {
        const cpfMatricula = document.getElementById('cpfMatricula').value;
        const senha = document.getElementById('senha').value;

        if (!cpfMatricula || !senha) {
            alert("Preencha todos os campos!");
            return;
        }

        const transaction = db.transaction(['usuarios'], 'readonly');
        const objectStore = transaction.objectStore('usuarios');
        const request = objectStore.get(cpfMatricula);

        request.onsuccess = function(event) {
            const usuario = event.target.result;
            if (usuario && usuario.senha === senha) {
                alert("Login bem-sucedido!");
                document.getElementById('login-container').classList.add('hidden');
                document.getElementById('funcionalidades-container').classList.remove('hidden');
            } else {
                alert("Usuário não cadastrado! Cadastre-se.");
            }
        };

        request.onerror = function(event) {
            alert("Erro ao fazer login: " + event.target.error);
        };
    }

    function mostrarCadastro() {
        document.getElementById('login-container').classList.add('hidden');
        document.getElementById('cadastro-container').classList.remove('hidden');
    }

    function voltarLogin() {
        document.getElementById('cadastro-container').classList.add('hidden');
        document.getElementById('login-container').classList.remove('hidden');
    }

    function mostrarGeradorPlanilha() {
        document.getElementById('gerador-planilha').classList.remove('hidden');
        document.getElementById('analise-combustivel').classList.add('hidden');
    }

    function mostrarAnaliseCombustivel() {
        document.getElementById('analise-combustivel').classList.remove('hidden');
        document.getElementById('gerador-planilha').classList.add('hidden');
    }

    function gerarPlanilha() {
        const lote = document.getElementById('lote').value;
        const tipo = document.getElementById('tipo').value;
        const dataAnalise = document.getElementById('dataAnalise').value;
        const resultado = document.getElementById('resultado').value;

        const data = [
            ['Lote', 'Tipo', 'Data da Análise', 'Resultado'],
            [lote, tipo, dataAnalise, resultado]
        ];

        const csvContent = data.map(e => e.join(",")).join("\n");
        const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
        const url = URL.createObjectURL(blob);
        const a = document.createElement("a");
        a.setAttribute("href", url);
        a.setAttribute("download", "dados_combustivel.csv");
        a.click();
        alert("Planilha gerada com sucesso!");
    }

    function verificarConformidade() {
        const densidade = parseFloat(document.getElementById('densidade').value);
        const temperatura = parseFloat(document.getElementById('temperatura').value);

        if (densidade < 1) {
            alert("Densidade aceita. Verificando temperatura...");
            if (temperatura === 20) {
                alert("Está conforme.");
            } else {
                alert("Não está conforme.");
            }
        } else {
            alert("Densidade deve ser menor que 1.");
        }
    }

    let darkTheme = true; // Tema inicial

    function toggleTheme() {
        darkTheme = !darkTheme;
        document.body.style.background = darkTheme ? 'linear-gradient(to right, #1e1e1e, #303030)' : 'linear-gradient(to right, #ffffff, #f0f0f0)';
        document.body.style.color = darkTheme ? '#E0E0E0' : '#333';
        const containers = document.querySelectorAll('.container');
        containers.forEach(container => {
            container.style.borderColor = darkTheme ? '#BB86FC' : '#6200EE';
            container.style.backgroundColor = darkTheme ? '#2E2E2E' : '#ffffff';
        });
        document.getElementById('theme-toggle').innerHTML = darkTheme ? '☀️' : '🌙';
    }
</script>

</body>
</html>
